#!/usr/bin/env node

/**
 * dependencias
 */

var app = require('../app'); //Carga mi aplicación app.js
var debug = require('debug')('nodepop:server');
var http = require('http'); //Carga la librería http

/**
 *puertos
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * HTTP server.
 */

var server = http.createServer(app);

/**
 * Listening
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize 
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {

        return val;
    }

    if (port >= 0) {

        return port;
    }

    return false;
}

/**
 * "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    //messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}


function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}